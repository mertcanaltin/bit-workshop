{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/@bitdesign+sparks.layout.flex@0.0.1_react@18.2.0/node_modules/@bitdesign/sparks.layout.flex/flex.tsx"],
  "sourcesContent": ["import type { ReactNode } from 'react';\nimport classNames from 'classnames';\nimport styles from './flex.module.scss';\nimport type { FlexAlignItems, FlexDirection, FlexJustifyContent } from './flex-options.js';\n\nexport type FlexProps = {\n  /**\n   * children to render in the flex layout.\n   */\n  children?: ReactNode;\n\n  /**\n   * direction for the flex layout.\n   */\n  direction?: FlexDirection;\n\n  /**\n   * reverse the direction.\n   */\n  reverse?: boolean;\n\n  /**\n   * class name to inject.\n   */\n  className?: string;\n\n  /**\n   * gap to use for the flex layout.\n   * defaults to X\n   */\n  gap?: string|number;\n\n  /**\n   * set the flex layout justify content.\n   */\n  justifyContent?: FlexJustifyContent;\n\n  /**\n   * set the flex layout align items.\n   */\n  alignItems?: FlexAlignItems;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport function Flex({\n  children,\n  className,\n  direction,\n  justifyContent,\n  alignItems,\n  gap,\n  ...rest\n}: FlexProps) {\n  const userInlineStyles = rest.style || {};\n\n  return (\n    <div\n      {...rest}\n      style={{ justifyContent, alignItems, flexDirection: direction, gap, ...userInlineStyles }}\n      className={classNames(styles.flex, className)}\n    >\n      {children}\n    </div>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;AACA,wBAAuB;AACvB,OAAO,YAAY;AAyCb,SAAU,KAAK,EACnB,UACA,WACA,WACA,gBACA,YACA,KACA,GAAG,KAAI,GACG;AACV,QAAM,mBAAmB,KAAK,SAAS,CAAA;AAEvC,aACE,mBAAAA,KAAA,OAAA,EAAA,GACM,MACJ,OAAO,EAAE,gBAAgB,YAAY,eAAe,WAAW,KAAK,GAAG,iBAAgB,GACvF,eAAW,kBAAAC,SAAW,OAAO,MAAM,SAAS,GAAC,SAEpC,CAAA;AAGf;",
  "names": ["_jsx", "classNames"]
}
