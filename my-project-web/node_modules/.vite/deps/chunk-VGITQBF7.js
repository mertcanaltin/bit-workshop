import {
  require_classnames,
  require_jsx_runtime
} from "./chunk-QE5EOC5M.js";
import {
  dist_exports,
  init_dist
} from "./chunk-UWQ6UF2F.js";
import {
  require_react
} from "./chunk-JBUEZKTR.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/navigation-provider.js
var require_navigation_provider = __commonJS({
  "node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/navigation-provider.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NavigationProvider = exports.useNavigation = exports.NavigationContext = void 0;
    var react_1 = __importStar(require_react());
    exports.NavigationContext = react_1.default.createContext({});
    function useNavigation2() {
      const routerContext = (0, react_1.useContext)(exports.NavigationContext);
      return routerContext;
    }
    exports.useNavigation = useNavigation2;
    function NavigationProvider2({ children, implementation }) {
      return react_1.default.createElement(exports.NavigationContext.Provider, { value: implementation }, children);
    }
    exports.NavigationProvider = NavigationProvider2;
  }
});

// node_modules/.pnpm/classnames@2.3.1/node_modules/classnames/index.js
var require_classnames2 = __commonJS({
  "node_modules/.pnpm/classnames@2.3.1/node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      function classNames2() {
        var classes = [];
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!arg)
            continue;
          var argType = typeof arg;
          if (argType === "string" || argType === "number") {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames2.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === "object") {
            if (arg.toString === Object.prototype.toString) {
              for (var key in arg) {
                if (hasOwn.call(arg, key) && arg[key]) {
                  classes.push(key);
                }
              }
            } else {
              classes.push(arg.toString());
            }
          }
        }
        return classes.join(" ");
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames2.default = classNames2;
        module.exports = classNames2;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames2;
        });
      } else {
        window.classNames = classNames2;
      }
    })();
  }
});

// node_modules/.pnpm/requires-port@1.0.0/node_modules/requires-port/index.js
var require_requires_port = __commonJS({
  "node_modules/.pnpm/requires-port@1.0.0/node_modules/requires-port/index.js"(exports, module) {
    "use strict";
    module.exports = function required(port, protocol) {
      protocol = protocol.split(":")[0];
      port = +port;
      if (!port)
        return false;
      switch (protocol) {
        case "http":
        case "ws":
          return port !== 80;
        case "https":
        case "wss":
          return port !== 443;
        case "ftp":
          return port !== 21;
        case "gopher":
          return port !== 70;
        case "file":
          return false;
      }
      return port !== 0;
    };
  }
});

// node_modules/.pnpm/querystringify@2.2.0/node_modules/querystringify/index.js
var require_querystringify = __commonJS({
  "node_modules/.pnpm/querystringify@2.2.0/node_modules/querystringify/index.js"(exports) {
    "use strict";
    var has = Object.prototype.hasOwnProperty;
    var undef;
    function decode(input) {
      try {
        return decodeURIComponent(input.replace(/\+/g, " "));
      } catch (e) {
        return null;
      }
    }
    function encode(input) {
      try {
        return encodeURIComponent(input);
      } catch (e) {
        return null;
      }
    }
    function querystring(query) {
      var parser = /([^=?#&]+)=?([^&]*)/g, result = {}, part;
      while (part = parser.exec(query)) {
        var key = decode(part[1]), value = decode(part[2]);
        if (key === null || value === null || key in result)
          continue;
        result[key] = value;
      }
      return result;
    }
    function querystringify(obj, prefix) {
      prefix = prefix || "";
      var pairs = [], value, key;
      if ("string" !== typeof prefix)
        prefix = "?";
      for (key in obj) {
        if (has.call(obj, key)) {
          value = obj[key];
          if (!value && (value === null || value === undef || isNaN(value))) {
            value = "";
          }
          key = encode(key);
          value = encode(value);
          if (key === null || value === null)
            continue;
          pairs.push(key + "=" + value);
        }
      }
      return pairs.length ? prefix + pairs.join("&") : "";
    }
    exports.stringify = querystringify;
    exports.parse = querystring;
  }
});

// node_modules/.pnpm/url-parse@1.5.10/node_modules/url-parse/index.js
var require_url_parse = __commonJS({
  "node_modules/.pnpm/url-parse@1.5.10/node_modules/url-parse/index.js"(exports, module) {
    "use strict";
    var required = require_requires_port();
    var qs = require_querystringify();
    var controlOrWhitespace = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/;
    var CRHTLF = /[\n\r\t]/g;
    var slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//;
    var port = /:\d+$/;
    var protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i;
    var windowsDriveLetter = /^[a-zA-Z]:/;
    function trimLeft(str) {
      return (str ? str : "").toString().replace(controlOrWhitespace, "");
    }
    var rules = [
      ["#", "hash"],
      // Extract from the back.
      ["?", "query"],
      // Extract from the back.
      function sanitize(address, url) {
        return isSpecial(url.protocol) ? address.replace(/\\/g, "/") : address;
      },
      ["/", "pathname"],
      // Extract from the back.
      ["@", "auth", 1],
      // Extract from the front.
      [NaN, "host", void 0, 1, 1],
      // Set left over value.
      [/:(\d*)$/, "port", void 0, 1],
      // RegExp the back.
      [NaN, "hostname", void 0, 1, 1]
      // Set left over.
    ];
    var ignore = { hash: 1, query: 1 };
    function lolcation(loc) {
      var globalVar;
      if (typeof window !== "undefined")
        globalVar = window;
      else if (typeof global !== "undefined")
        globalVar = global;
      else if (typeof self !== "undefined")
        globalVar = self;
      else
        globalVar = {};
      var location = globalVar.location || {};
      loc = loc || location;
      var finaldestination = {}, type = typeof loc, key;
      if ("blob:" === loc.protocol) {
        finaldestination = new Url(unescape(loc.pathname), {});
      } else if ("string" === type) {
        finaldestination = new Url(loc, {});
        for (key in ignore)
          delete finaldestination[key];
      } else if ("object" === type) {
        for (key in loc) {
          if (key in ignore)
            continue;
          finaldestination[key] = loc[key];
        }
        if (finaldestination.slashes === void 0) {
          finaldestination.slashes = slashes.test(loc.href);
        }
      }
      return finaldestination;
    }
    function isSpecial(scheme) {
      return scheme === "file:" || scheme === "ftp:" || scheme === "http:" || scheme === "https:" || scheme === "ws:" || scheme === "wss:";
    }
    function extractProtocol(address, location) {
      address = trimLeft(address);
      address = address.replace(CRHTLF, "");
      location = location || {};
      var match = protocolre.exec(address);
      var protocol = match[1] ? match[1].toLowerCase() : "";
      var forwardSlashes = !!match[2];
      var otherSlashes = !!match[3];
      var slashesCount = 0;
      var rest;
      if (forwardSlashes) {
        if (otherSlashes) {
          rest = match[2] + match[3] + match[4];
          slashesCount = match[2].length + match[3].length;
        } else {
          rest = match[2] + match[4];
          slashesCount = match[2].length;
        }
      } else {
        if (otherSlashes) {
          rest = match[3] + match[4];
          slashesCount = match[3].length;
        } else {
          rest = match[4];
        }
      }
      if (protocol === "file:") {
        if (slashesCount >= 2) {
          rest = rest.slice(2);
        }
      } else if (isSpecial(protocol)) {
        rest = match[4];
      } else if (protocol) {
        if (forwardSlashes) {
          rest = rest.slice(2);
        }
      } else if (slashesCount >= 2 && isSpecial(location.protocol)) {
        rest = match[4];
      }
      return {
        protocol,
        slashes: forwardSlashes || isSpecial(protocol),
        slashesCount,
        rest
      };
    }
    function resolve(relative, base) {
      if (relative === "")
        return base;
      var path = (base || "/").split("/").slice(0, -1).concat(relative.split("/")), i = path.length, last = path[i - 1], unshift = false, up = 0;
      while (i--) {
        if (path[i] === ".") {
          path.splice(i, 1);
        } else if (path[i] === "..") {
          path.splice(i, 1);
          up++;
        } else if (up) {
          if (i === 0)
            unshift = true;
          path.splice(i, 1);
          up--;
        }
      }
      if (unshift)
        path.unshift("");
      if (last === "." || last === "..")
        path.push("");
      return path.join("/");
    }
    function Url(address, location, parser) {
      address = trimLeft(address);
      address = address.replace(CRHTLF, "");
      if (!(this instanceof Url)) {
        return new Url(address, location, parser);
      }
      var relative, extracted, parse, instruction, index, key, instructions = rules.slice(), type = typeof location, url = this, i = 0;
      if ("object" !== type && "string" !== type) {
        parser = location;
        location = null;
      }
      if (parser && "function" !== typeof parser)
        parser = qs.parse;
      location = lolcation(location);
      extracted = extractProtocol(address || "", location);
      relative = !extracted.protocol && !extracted.slashes;
      url.slashes = extracted.slashes || relative && location.slashes;
      url.protocol = extracted.protocol || location.protocol || "";
      address = extracted.rest;
      if (extracted.protocol === "file:" && (extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) || !extracted.slashes && (extracted.protocol || extracted.slashesCount < 2 || !isSpecial(url.protocol))) {
        instructions[3] = [/(.*)/, "pathname"];
      }
      for (; i < instructions.length; i++) {
        instruction = instructions[i];
        if (typeof instruction === "function") {
          address = instruction(address, url);
          continue;
        }
        parse = instruction[0];
        key = instruction[1];
        if (parse !== parse) {
          url[key] = address;
        } else if ("string" === typeof parse) {
          index = parse === "@" ? address.lastIndexOf(parse) : address.indexOf(parse);
          if (~index) {
            if ("number" === typeof instruction[2]) {
              url[key] = address.slice(0, index);
              address = address.slice(index + instruction[2]);
            } else {
              url[key] = address.slice(index);
              address = address.slice(0, index);
            }
          }
        } else if (index = parse.exec(address)) {
          url[key] = index[1];
          address = address.slice(0, index.index);
        }
        url[key] = url[key] || (relative && instruction[3] ? location[key] || "" : "");
        if (instruction[4])
          url[key] = url[key].toLowerCase();
      }
      if (parser)
        url.query = parser(url.query);
      if (relative && location.slashes && url.pathname.charAt(0) !== "/" && (url.pathname !== "" || location.pathname !== "")) {
        url.pathname = resolve(url.pathname, location.pathname);
      }
      if (url.pathname.charAt(0) !== "/" && isSpecial(url.protocol)) {
        url.pathname = "/" + url.pathname;
      }
      if (!required(url.port, url.protocol)) {
        url.host = url.hostname;
        url.port = "";
      }
      url.username = url.password = "";
      if (url.auth) {
        index = url.auth.indexOf(":");
        if (~index) {
          url.username = url.auth.slice(0, index);
          url.username = encodeURIComponent(decodeURIComponent(url.username));
          url.password = url.auth.slice(index + 1);
          url.password = encodeURIComponent(decodeURIComponent(url.password));
        } else {
          url.username = encodeURIComponent(decodeURIComponent(url.auth));
        }
        url.auth = url.password ? url.username + ":" + url.password : url.username;
      }
      url.origin = url.protocol !== "file:" && isSpecial(url.protocol) && url.host ? url.protocol + "//" + url.host : "null";
      url.href = url.toString();
    }
    function set(part, value, fn) {
      var url = this;
      switch (part) {
        case "query":
          if ("string" === typeof value && value.length) {
            value = (fn || qs.parse)(value);
          }
          url[part] = value;
          break;
        case "port":
          url[part] = value;
          if (!required(value, url.protocol)) {
            url.host = url.hostname;
            url[part] = "";
          } else if (value) {
            url.host = url.hostname + ":" + value;
          }
          break;
        case "hostname":
          url[part] = value;
          if (url.port)
            value += ":" + url.port;
          url.host = value;
          break;
        case "host":
          url[part] = value;
          if (port.test(value)) {
            value = value.split(":");
            url.port = value.pop();
            url.hostname = value.join(":");
          } else {
            url.hostname = value;
            url.port = "";
          }
          break;
        case "protocol":
          url.protocol = value.toLowerCase();
          url.slashes = !fn;
          break;
        case "pathname":
        case "hash":
          if (value) {
            var char = part === "pathname" ? "/" : "#";
            url[part] = value.charAt(0) !== char ? char + value : value;
          } else {
            url[part] = value;
          }
          break;
        case "username":
        case "password":
          url[part] = encodeURIComponent(value);
          break;
        case "auth":
          var index = value.indexOf(":");
          if (~index) {
            url.username = value.slice(0, index);
            url.username = encodeURIComponent(decodeURIComponent(url.username));
            url.password = value.slice(index + 1);
            url.password = encodeURIComponent(decodeURIComponent(url.password));
          } else {
            url.username = encodeURIComponent(decodeURIComponent(value));
          }
      }
      for (var i = 0; i < rules.length; i++) {
        var ins = rules[i];
        if (ins[4])
          url[ins[1]] = url[ins[1]].toLowerCase();
      }
      url.auth = url.password ? url.username + ":" + url.password : url.username;
      url.origin = url.protocol !== "file:" && isSpecial(url.protocol) && url.host ? url.protocol + "//" + url.host : "null";
      url.href = url.toString();
      return url;
    }
    function toString(stringify) {
      if (!stringify || "function" !== typeof stringify)
        stringify = qs.stringify;
      var query, url = this, host = url.host, protocol = url.protocol;
      if (protocol && protocol.charAt(protocol.length - 1) !== ":")
        protocol += ":";
      var result = protocol + (url.protocol && url.slashes || isSpecial(url.protocol) ? "//" : "");
      if (url.username) {
        result += url.username;
        if (url.password)
          result += ":" + url.password;
        result += "@";
      } else if (url.password) {
        result += ":" + url.password;
        result += "@";
      } else if (url.protocol !== "file:" && isSpecial(url.protocol) && !host && url.pathname !== "/") {
        result += "@";
      }
      if (host[host.length - 1] === ":" || port.test(url.hostname) && !url.port) {
        host += ":";
      }
      result += host + url.pathname;
      query = "object" === typeof url.query ? stringify(url.query) : url.query;
      if (query)
        result += "?" !== query.charAt(0) ? "?" + query : query;
      if (url.hash)
        result += url.hash;
      return result;
    }
    Url.prototype = { set, toString };
    Url.extractProtocol = extractProtocol;
    Url.location = lolcation;
    Url.trimLeft = trimLeft;
    Url.qs = qs;
    module.exports = Url;
  }
});

// node_modules/.pnpm/@teambit+base-ui.routing.compare-url@1.0.1_react-dom@18.2.0_react@18.2.0/node_modules/@teambit/base-ui.routing.compare-url/dist/compare-url.js
var require_compare_url = __commonJS({
  "node_modules/.pnpm/@teambit+base-ui.routing.compare-url@1.0.1_react-dom@18.2.0_react@18.2.0/node_modules/@teambit/base-ui.routing.compare-url/dist/compare-url.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.compareUrl = void 0;
    var url_parse_1 = __importDefault(require_url_parse());
    function compareUrl(baseUrl, toMatchUrl, { exact, strict } = {}) {
      if (baseUrl === toMatchUrl)
        return true;
      if (!strict) {
        baseUrl = baseUrl.replace(/\/(?=[?#]|$)/, "");
        toMatchUrl = toMatchUrl.replace(/\/(?=[?#]|$)/, "");
      }
      const base = (0, url_parse_1.default)(baseUrl);
      const match = (0, url_parse_1.default)(toMatchUrl);
      const subUrl = isSubUrl(base, match);
      const exactMatch = !exact || isExactMatch(base, match);
      const strictMatch = !strict || isStrictMatch(base, match);
      return subUrl && exactMatch && strictMatch;
    }
    exports.compareUrl = compareUrl;
    function isSubUrl(base, match) {
      return (!match.protocol || match.protocol === base.protocol) && (!match.hostname || match.hostname === base.hostname) && (!match.port || match.port === base.port) && (!match.pathname || base.pathname.startsWith(match.pathname)) && (!match.query || isSubObject(match.query, base.query)) && (!match.hash || match.hash === base.hash) && (!match.password || match.password === base.password) && (!match.username || match.username === base.username);
    }
    function isExactMatch(base, match) {
      return (!match.pathname || base.pathname === match.pathname) && (!match.query || isSubObject(base.query, match.query));
    }
    function isStrictMatch(base, match) {
      return !match.pathname || base.pathname.endsWith("/") === match.pathname.endsWith("/");
    }
    function isSubObject(source, target) {
      return Object.keys(source).every((key) => source[key] === target[key]);
    }
  }
});

// node_modules/.pnpm/@teambit+base-ui.routing.compare-url@1.0.1_react-dom@18.2.0_react@18.2.0/node_modules/@teambit/base-ui.routing.compare-url/dist/index.js
var require_dist = __commonJS({
  "node_modules/.pnpm/@teambit+base-ui.routing.compare-url@1.0.1_react-dom@18.2.0_react@18.2.0/node_modules/@teambit/base-ui.routing.compare-url/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.compareUrl = void 0;
    var compare_url_1 = require_compare_url();
    Object.defineProperty(exports, "compareUrl", { enumerable: true, get: function() {
      return compare_url_1.compareUrl;
    } });
  }
});

// node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/use-location.js
var require_use_location = __commonJS({
  "node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/use-location.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useLocation = void 0;
    var navigation_provider_1 = require_navigation_provider();
    function useLocation2() {
      const nav = (0, navigation_provider_1.useNavigation)();
      const actualUseLocation = nav.useLocation || NativeUseLocation;
      return actualUseLocation();
    }
    exports.useLocation = useLocation2;
    function NativeUseLocation() {
      if (typeof window === "undefined")
        return void 0;
      return window.location;
    }
  }
});

// node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/native-link.js
var require_native_link = __commonJS({
  "node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/native-link.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __rest = exports && exports.__rest || function(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NativeLink = void 0;
    var react_1 = __importStar(require_react());
    var classnames_1 = __importDefault(require_classnames2());
    var base_ui_routing_compare_url_1 = require_dist();
    var use_location_1 = require_use_location();
    var externalLinkAttributes = { rel: "noopener", target: "_blank" };
    exports.NativeLink = (0, react_1.forwardRef)(function NativeLink(_a, ref) {
      var {
        className,
        style,
        activeClassName,
        activeStyle,
        active,
        strict,
        exact,
        href,
        external,
        // unused, but excluded from ...rest:
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        native,
        // unused, but excluded from ...rest:
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        state
      } = _a, rest = __rest(_a, ["className", "style", "activeClassName", "activeStyle", "active", "strict", "exact", "href", "external", "native", "state"]);
      const location = (0, use_location_1.useLocation)();
      const shouldCalcActive = !!activeClassName || !!activeStyle;
      const isActive = (0, react_1.useMemo)(() => {
        if (!shouldCalcActive)
          return false;
        if (typeof active === "boolean")
          return active;
        if (!location || !href)
          return false;
        return (0, base_ui_routing_compare_url_1.compareUrl)(location.pathname, href, { exact, strict });
      }, [active, href, location, shouldCalcActive]);
      const externalProps = external ? externalLinkAttributes : {};
      const combinedStyles = (0, react_1.useMemo)(() => isActive && activeStyle ? Object.assign(Object.assign({}, style), activeStyle) : style, [isActive, style]);
      return react_1.default.createElement("a", Object.assign({}, externalProps, rest, { ref, href, className: (0, classnames_1.default)(className, isActive && activeClassName), style: combinedStyles }));
    });
  }
});

// node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/link.js
var require_link = __commonJS({
  "node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/link.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Link = void 0;
    var react_1 = __importStar(require_react());
    var navigation_provider_1 = require_navigation_provider();
    var native_link_1 = require_native_link();
    exports.Link = (0, react_1.forwardRef)(function Link2(props, ref) {
      const nav = (0, navigation_provider_1.useNavigation)();
      const ActualLink = nav.Link || native_link_1.NativeLink;
      if (props.native || props.external) {
        return react_1.default.createElement(native_link_1.NativeLink, Object.assign({}, props, { ref }));
      }
      return react_1.default.createElement(ActualLink, Object.assign({}, props, { ref }));
    });
  }
});

// node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/use-navigate.js
var require_use_navigate = __commonJS({
  "node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/use-navigate.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useNavigate = void 0;
    var navigation_provider_1 = require_navigation_provider();
    function useNavigate2() {
      var _a;
      const nav = (0, navigation_provider_1.useNavigation)();
      return ((_a = nav.useNavigate) === null || _a === void 0 ? void 0 : _a.call(nav)) || nativeNavigator;
    }
    exports.useNavigate = useNavigate2;
    function nativeNavigator(target, { replace } = {}) {
      if (typeof window === "undefined")
        throw new Error("base-react.navigation.use-location - cannot use native navigator outside of browser. Inject a custom useNavigate, or use navigation after mount");
      const { location, history } = window;
      if (typeof target === "number") {
        history.go(target);
      } else if (replace) {
        location.replace(target);
      } else {
        location.assign(target);
      }
    }
  }
});

// node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/.pnpm/@teambit+base-react.navigation.link@2.0.31_@testing-library+react@14.2.2_@types+react@18.2.23_o35ztxm4heajch7viqwqqf5hzi/node_modules/@teambit/base-react.navigation.link/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NavigationProvider = exports.useNavigation = exports.useNavigate = exports.useLocation = exports.Link = void 0;
    var link_1 = require_link();
    Object.defineProperty(exports, "Link", { enumerable: true, get: function() {
      return link_1.Link;
    } });
    var use_location_1 = require_use_location();
    Object.defineProperty(exports, "useLocation", { enumerable: true, get: function() {
      return use_location_1.useLocation;
    } });
    var use_navigate_1 = require_use_navigate();
    Object.defineProperty(exports, "useNavigate", { enumerable: true, get: function() {
      return use_navigate_1.useNavigate;
    } });
    var navigation_provider_1 = require_navigation_provider();
    Object.defineProperty(exports, "useNavigation", { enumerable: true, get: function() {
      return navigation_provider_1.useNavigation;
    } });
    Object.defineProperty(exports, "NavigationProvider", { enumerable: true, get: function() {
      return navigation_provider_1.NavigationProvider;
    } });
  }
});

// node_modules/.pnpm/@babel+runtime@7.24.1/node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var init_extends = __esm({
  "node_modules/.pnpm/@babel+runtime@7.24.1/node_modules/@babel/runtime/helpers/esm/extends.js"() {
  }
});

// node_modules/.pnpm/history@5.3.0/node_modules/history/index.js
var history_exports = {};
__export(history_exports, {
  Action: () => Action,
  createBrowserHistory: () => createBrowserHistory,
  createHashHistory: () => createHashHistory,
  createMemoryHistory: () => createMemoryHistory,
  createPath: () => createPath,
  parsePath: () => parsePath
});
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined")
      console.warn(message);
    try {
      throw new Error(message);
    } catch (e) {
    }
  }
}
function createBrowserHistory(options) {
  if (options === void 0) {
    options = {};
  }
  var _options = options, _options$window = _options.window, window2 = _options$window === void 0 ? document.defaultView : _options$window;
  var globalHistory = window2.history;
  function getIndexAndLocation() {
    var _window$location = window2.location, pathname = _window$location.pathname, search = _window$location.search, hash = _window$location.hash;
    var state = globalHistory.state || {};
    return [state.idx, readOnly({
      pathname,
      search,
      hash,
      state: state.usr || null,
      key: state.key || "default"
    })];
  }
  var blockedPopTx = null;
  function handlePop() {
    if (blockedPopTx) {
      blockers.call(blockedPopTx);
      blockedPopTx = null;
    } else {
      var nextAction = Action.Pop;
      var _getIndexAndLocation = getIndexAndLocation(), nextIndex = _getIndexAndLocation[0], nextLocation = _getIndexAndLocation[1];
      if (blockers.length) {
        if (nextIndex != null) {
          var delta = index - nextIndex;
          if (delta) {
            blockedPopTx = {
              action: nextAction,
              location: nextLocation,
              retry: function retry() {
                go(delta * -1);
              }
            };
            go(delta);
          }
        } else {
          true ? warning(
            false,
            // TODO: Write up a doc that explains our blocking strategy in
            // detail and link to it here so people can understand better what
            // is going on and how to avoid it.
            "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation."
          ) : void 0;
        }
      } else {
        applyTx(nextAction);
      }
    }
  }
  window2.addEventListener(PopStateEventType, handlePop);
  var action = Action.Pop;
  var _getIndexAndLocation2 = getIndexAndLocation(), index = _getIndexAndLocation2[0], location = _getIndexAndLocation2[1];
  var listeners = createEvents();
  var blockers = createEvents();
  if (index == null) {
    index = 0;
    globalHistory.replaceState(_extends({}, globalHistory.state, {
      idx: index
    }), "");
  }
  function createHref(to) {
    return typeof to === "string" ? to : createPath(to);
  }
  function getNextLocation(to, state) {
    if (state === void 0) {
      state = null;
    }
    return readOnly(_extends({
      pathname: location.pathname,
      hash: "",
      search: ""
    }, typeof to === "string" ? parsePath(to) : to, {
      state,
      key: createKey()
    }));
  }
  function getHistoryStateAndUrl(nextLocation, index2) {
    return [{
      usr: nextLocation.state,
      key: nextLocation.key,
      idx: index2
    }, createHref(nextLocation)];
  }
  function allowTx(action2, location2, retry) {
    return !blockers.length || (blockers.call({
      action: action2,
      location: location2,
      retry
    }), false);
  }
  function applyTx(nextAction) {
    action = nextAction;
    var _getIndexAndLocation3 = getIndexAndLocation();
    index = _getIndexAndLocation3[0];
    location = _getIndexAndLocation3[1];
    listeners.call({
      action,
      location
    });
  }
  function push(to, state) {
    var nextAction = Action.Push;
    var nextLocation = getNextLocation(to, state);
    function retry() {
      push(to, state);
    }
    if (allowTx(nextAction, nextLocation, retry)) {
      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1), historyState = _getHistoryStateAndUr[0], url = _getHistoryStateAndUr[1];
      try {
        globalHistory.pushState(historyState, "", url);
      } catch (error) {
        window2.location.assign(url);
      }
      applyTx(nextAction);
    }
  }
  function replace(to, state) {
    var nextAction = Action.Replace;
    var nextLocation = getNextLocation(to, state);
    function retry() {
      replace(to, state);
    }
    if (allowTx(nextAction, nextLocation, retry)) {
      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index), historyState = _getHistoryStateAndUr2[0], url = _getHistoryStateAndUr2[1];
      globalHistory.replaceState(historyState, "", url);
      applyTx(nextAction);
    }
  }
  function go(delta) {
    globalHistory.go(delta);
  }
  var history = {
    get action() {
      return action;
    },
    get location() {
      return location;
    },
    createHref,
    push,
    replace,
    go,
    back: function back() {
      go(-1);
    },
    forward: function forward() {
      go(1);
    },
    listen: function listen(listener) {
      return listeners.push(listener);
    },
    block: function block(blocker) {
      var unblock = blockers.push(blocker);
      if (blockers.length === 1) {
        window2.addEventListener(BeforeUnloadEventType, promptBeforeUnload);
      }
      return function() {
        unblock();
        if (!blockers.length) {
          window2.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);
        }
      };
    }
  };
  return history;
}
function createHashHistory(options) {
  if (options === void 0) {
    options = {};
  }
  var _options2 = options, _options2$window = _options2.window, window2 = _options2$window === void 0 ? document.defaultView : _options2$window;
  var globalHistory = window2.history;
  function getIndexAndLocation() {
    var _parsePath = parsePath(window2.location.hash.substr(1)), _parsePath$pathname = _parsePath.pathname, pathname = _parsePath$pathname === void 0 ? "/" : _parsePath$pathname, _parsePath$search = _parsePath.search, search = _parsePath$search === void 0 ? "" : _parsePath$search, _parsePath$hash = _parsePath.hash, hash = _parsePath$hash === void 0 ? "" : _parsePath$hash;
    var state = globalHistory.state || {};
    return [state.idx, readOnly({
      pathname,
      search,
      hash,
      state: state.usr || null,
      key: state.key || "default"
    })];
  }
  var blockedPopTx = null;
  function handlePop() {
    if (blockedPopTx) {
      blockers.call(blockedPopTx);
      blockedPopTx = null;
    } else {
      var nextAction = Action.Pop;
      var _getIndexAndLocation4 = getIndexAndLocation(), nextIndex = _getIndexAndLocation4[0], nextLocation = _getIndexAndLocation4[1];
      if (blockers.length) {
        if (nextIndex != null) {
          var delta = index - nextIndex;
          if (delta) {
            blockedPopTx = {
              action: nextAction,
              location: nextLocation,
              retry: function retry() {
                go(delta * -1);
              }
            };
            go(delta);
          }
        } else {
          true ? warning(
            false,
            // TODO: Write up a doc that explains our blocking strategy in
            // detail and link to it here so people can understand better
            // what is going on and how to avoid it.
            "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation."
          ) : void 0;
        }
      } else {
        applyTx(nextAction);
      }
    }
  }
  window2.addEventListener(PopStateEventType, handlePop);
  window2.addEventListener(HashChangeEventType, function() {
    var _getIndexAndLocation5 = getIndexAndLocation(), nextLocation = _getIndexAndLocation5[1];
    if (createPath(nextLocation) !== createPath(location)) {
      handlePop();
    }
  });
  var action = Action.Pop;
  var _getIndexAndLocation6 = getIndexAndLocation(), index = _getIndexAndLocation6[0], location = _getIndexAndLocation6[1];
  var listeners = createEvents();
  var blockers = createEvents();
  if (index == null) {
    index = 0;
    globalHistory.replaceState(_extends({}, globalHistory.state, {
      idx: index
    }), "");
  }
  function getBaseHref() {
    var base = document.querySelector("base");
    var href = "";
    if (base && base.getAttribute("href")) {
      var url = window2.location.href;
      var hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href;
  }
  function createHref(to) {
    return getBaseHref() + "#" + (typeof to === "string" ? to : createPath(to));
  }
  function getNextLocation(to, state) {
    if (state === void 0) {
      state = null;
    }
    return readOnly(_extends({
      pathname: location.pathname,
      hash: "",
      search: ""
    }, typeof to === "string" ? parsePath(to) : to, {
      state,
      key: createKey()
    }));
  }
  function getHistoryStateAndUrl(nextLocation, index2) {
    return [{
      usr: nextLocation.state,
      key: nextLocation.key,
      idx: index2
    }, createHref(nextLocation)];
  }
  function allowTx(action2, location2, retry) {
    return !blockers.length || (blockers.call({
      action: action2,
      location: location2,
      retry
    }), false);
  }
  function applyTx(nextAction) {
    action = nextAction;
    var _getIndexAndLocation7 = getIndexAndLocation();
    index = _getIndexAndLocation7[0];
    location = _getIndexAndLocation7[1];
    listeners.call({
      action,
      location
    });
  }
  function push(to, state) {
    var nextAction = Action.Push;
    var nextLocation = getNextLocation(to, state);
    function retry() {
      push(to, state);
    }
    true ? warning(nextLocation.pathname.charAt(0) === "/", "Relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")") : void 0;
    if (allowTx(nextAction, nextLocation, retry)) {
      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1), historyState = _getHistoryStateAndUr3[0], url = _getHistoryStateAndUr3[1];
      try {
        globalHistory.pushState(historyState, "", url);
      } catch (error) {
        window2.location.assign(url);
      }
      applyTx(nextAction);
    }
  }
  function replace(to, state) {
    var nextAction = Action.Replace;
    var nextLocation = getNextLocation(to, state);
    function retry() {
      replace(to, state);
    }
    true ? warning(nextLocation.pathname.charAt(0) === "/", "Relative pathnames are not supported in hash history.replace(" + JSON.stringify(to) + ")") : void 0;
    if (allowTx(nextAction, nextLocation, retry)) {
      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index), historyState = _getHistoryStateAndUr4[0], url = _getHistoryStateAndUr4[1];
      globalHistory.replaceState(historyState, "", url);
      applyTx(nextAction);
    }
  }
  function go(delta) {
    globalHistory.go(delta);
  }
  var history = {
    get action() {
      return action;
    },
    get location() {
      return location;
    },
    createHref,
    push,
    replace,
    go,
    back: function back() {
      go(-1);
    },
    forward: function forward() {
      go(1);
    },
    listen: function listen(listener) {
      return listeners.push(listener);
    },
    block: function block(blocker) {
      var unblock = blockers.push(blocker);
      if (blockers.length === 1) {
        window2.addEventListener(BeforeUnloadEventType, promptBeforeUnload);
      }
      return function() {
        unblock();
        if (!blockers.length) {
          window2.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);
        }
      };
    }
  };
  return history;
}
function createMemoryHistory(options) {
  if (options === void 0) {
    options = {};
  }
  var _options3 = options, _options3$initialEntr = _options3.initialEntries, initialEntries = _options3$initialEntr === void 0 ? ["/"] : _options3$initialEntr, initialIndex = _options3.initialIndex;
  var entries = initialEntries.map(function(entry) {
    var location2 = readOnly(_extends({
      pathname: "/",
      search: "",
      hash: "",
      state: null,
      key: createKey()
    }, typeof entry === "string" ? parsePath(entry) : entry));
    true ? warning(location2.pathname.charAt(0) === "/", "Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: " + JSON.stringify(entry) + ")") : void 0;
    return location2;
  });
  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);
  var action = Action.Pop;
  var location = entries[index];
  var listeners = createEvents();
  var blockers = createEvents();
  function createHref(to) {
    return typeof to === "string" ? to : createPath(to);
  }
  function getNextLocation(to, state) {
    if (state === void 0) {
      state = null;
    }
    return readOnly(_extends({
      pathname: location.pathname,
      search: "",
      hash: ""
    }, typeof to === "string" ? parsePath(to) : to, {
      state,
      key: createKey()
    }));
  }
  function allowTx(action2, location2, retry) {
    return !blockers.length || (blockers.call({
      action: action2,
      location: location2,
      retry
    }), false);
  }
  function applyTx(nextAction, nextLocation) {
    action = nextAction;
    location = nextLocation;
    listeners.call({
      action,
      location
    });
  }
  function push(to, state) {
    var nextAction = Action.Push;
    var nextLocation = getNextLocation(to, state);
    function retry() {
      push(to, state);
    }
    true ? warning(location.pathname.charAt(0) === "/", "Relative pathnames are not supported in memory history.push(" + JSON.stringify(to) + ")") : void 0;
    if (allowTx(nextAction, nextLocation, retry)) {
      index += 1;
      entries.splice(index, entries.length, nextLocation);
      applyTx(nextAction, nextLocation);
    }
  }
  function replace(to, state) {
    var nextAction = Action.Replace;
    var nextLocation = getNextLocation(to, state);
    function retry() {
      replace(to, state);
    }
    true ? warning(location.pathname.charAt(0) === "/", "Relative pathnames are not supported in memory history.replace(" + JSON.stringify(to) + ")") : void 0;
    if (allowTx(nextAction, nextLocation, retry)) {
      entries[index] = nextLocation;
      applyTx(nextAction, nextLocation);
    }
  }
  function go(delta) {
    var nextIndex = clamp(index + delta, 0, entries.length - 1);
    var nextAction = Action.Pop;
    var nextLocation = entries[nextIndex];
    function retry() {
      go(delta);
    }
    if (allowTx(nextAction, nextLocation, retry)) {
      index = nextIndex;
      applyTx(nextAction, nextLocation);
    }
  }
  var history = {
    get index() {
      return index;
    },
    get action() {
      return action;
    },
    get location() {
      return location;
    },
    createHref,
    push,
    replace,
    go,
    back: function back() {
      go(-1);
    },
    forward: function forward() {
      go(1);
    },
    listen: function listen(listener) {
      return listeners.push(listener);
    },
    block: function block(blocker) {
      return blockers.push(blocker);
    }
  };
  return history;
}
function clamp(n, lowerBound, upperBound) {
  return Math.min(Math.max(n, lowerBound), upperBound);
}
function promptBeforeUnload(event) {
  event.preventDefault();
  event.returnValue = "";
}
function createEvents() {
  var handlers = [];
  return {
    get length() {
      return handlers.length;
    },
    push: function push(fn) {
      handlers.push(fn);
      return function() {
        handlers = handlers.filter(function(handler) {
          return handler !== fn;
        });
      };
    },
    call: function call(arg) {
      handlers.forEach(function(fn) {
        return fn && fn(arg);
      });
    }
  };
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function createPath(_ref) {
  var _ref$pathname = _ref.pathname, pathname = _ref$pathname === void 0 ? "/" : _ref$pathname, _ref$search = _ref.search, search = _ref$search === void 0 ? "" : _ref$search, _ref$hash = _ref.hash, hash = _ref$hash === void 0 ? "" : _ref$hash;
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path) {
  var parsedPath = {};
  if (path) {
    var hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substr(hashIndex);
      path = path.substr(0, hashIndex);
    }
    var searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substr(searchIndex);
      path = path.substr(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
var Action, readOnly, BeforeUnloadEventType, HashChangeEventType, PopStateEventType;
var init_history = __esm({
  "node_modules/.pnpm/history@5.3.0/node_modules/history/index.js"() {
    init_extends();
    (function(Action2) {
      Action2["Pop"] = "POP";
      Action2["Push"] = "PUSH";
      Action2["Replace"] = "REPLACE";
    })(Action || (Action = {}));
    readOnly = true ? function(obj) {
      return Object.freeze(obj);
    } : function(obj) {
      return obj;
    };
    BeforeUnloadEventType = "beforeunload";
    HashChangeEventType = "hashchange";
    PopStateEventType = "popstate";
  }
});

// node_modules/.pnpm/@teambit+ui-foundation.ui.navigation.react-router-adapter@6.1.1_@testing-library+react@14.2.2_kz6rdpqklqxcs55aokg664df6e/node_modules/@teambit/ui-foundation.ui.navigation.react-router-adapter/dist/react-router-link.js
var require_react_router_link = __commonJS({
  "node_modules/.pnpm/@teambit+ui-foundation.ui.navigation.react-router-adapter@6.1.1_@testing-library+react@14.2.2_kz6rdpqklqxcs55aokg664df6e/node_modules/@teambit/ui-foundation.ui.navigation.react-router-adapter/dist/react-router-link.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __rest = exports && exports.__rest || function(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ReactRouterLink = void 0;
    var react_1 = __importStar(require_react());
    var classnames_1 = __importDefault(require_classnames2());
    var react_router_dom_1 = (init_dist(), __toCommonJS(dist_exports));
    var history_1 = (init_history(), __toCommonJS(history_exports));
    exports.ReactRouterLink = (0, react_1.forwardRef)(function LinkWithRef(_a, ref) {
      var {
        children = null,
        href = "",
        state,
        style,
        className,
        activeClassName,
        activeStyle,
        active,
        exact,
        // strict is removed in RR6, but included in our interface
        strict,
        native,
        external
      } = _a, props = __rest(_a, ["children", "href", "state", "style", "className", "activeClassName", "activeStyle", "active", "exact", "strict", "native", "external"]);
      const to = (0, react_1.useMemo)(() => Object.assign(Object.assign({}, (0, history_1.parsePath)(href)), { state }), [href, state]);
      if (activeClassName || activeStyle) {
        return (
          // @ts-ignore (https://github.com/teambit/bit/issues/4401)
          react_1.default.createElement(react_router_dom_1.NavLink, Object.assign({ to, ref, end: exact, style: ({ isActive }) => Object.assign(Object.assign({}, style), (active !== null && active !== void 0 ? active : isActive) && activeStyle), className: ({ isActive }) => (0, classnames_1.default)(className, (active !== null && active !== void 0 ? active : isActive) && activeClassName) }, props), children)
        );
      }
      return react_1.default.createElement(react_router_dom_1.Link, Object.assign({}, props, { className, style, to, ref }), children);
    });
  }
});

// node_modules/.pnpm/@teambit+ui-foundation.ui.navigation.react-router-adapter@6.1.1_@testing-library+react@14.2.2_kz6rdpqklqxcs55aokg664df6e/node_modules/@teambit/ui-foundation.ui.navigation.react-router-adapter/dist/react-routing-provider.js
var require_react_routing_provider = __commonJS({
  "node_modules/.pnpm/@teambit+ui-foundation.ui.navigation.react-router-adapter@6.1.1_@testing-library+react@14.2.2_kz6rdpqklqxcs55aokg664df6e/node_modules/@teambit/ui-foundation.ui.navigation.react-router-adapter/dist/react-routing-provider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.reactRouterAdapter = void 0;
    var react_router_dom_1 = (init_dist(), __toCommonJS(dist_exports));
    var react_router_link_1 = require_react_router_link();
    exports.reactRouterAdapter = {
      Link: react_router_link_1.ReactRouterLink,
      useLocation: react_router_dom_1.useLocation,
      useNavigate: react_router_dom_1.useNavigate
    };
  }
});

// node_modules/.pnpm/@teambit+ui-foundation.ui.navigation.react-router-adapter@6.1.1_@testing-library+react@14.2.2_kz6rdpqklqxcs55aokg664df6e/node_modules/@teambit/ui-foundation.ui.navigation.react-router-adapter/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/.pnpm/@teambit+ui-foundation.ui.navigation.react-router-adapter@6.1.1_@testing-library+react@14.2.2_kz6rdpqklqxcs55aokg664df6e/node_modules/@teambit/ui-foundation.ui.navigation.react-router-adapter/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.reactRouterAdapter = void 0;
    var react_routing_provider_1 = require_react_routing_provider();
    Object.defineProperty(exports, "reactRouterAdapter", { enumerable: true, get: function() {
      return react_routing_provider_1.reactRouterAdapter;
    } });
  }
});

// node_modules/.pnpm/@bitdesign+sparks.navigation.link@0.0.2_@testing-library+react@14.2.2_@types+react@18.2.23_re_woyj4nxx2vqabcfadcss33skqa/node_modules/@bitdesign/sparks.navigation.link/dist/link.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_classnames = __toESM(require_classnames(), 1);
var import_base_react_navigation = __toESM(require_dist2(), 1);
import styles from "/Users/mert/Desktop/openSource/bit-workshop/node_modules/.pnpm/@bitdesign+sparks.navigation.link@0.0.2_@testing-library+react@14.2.2_@types+react@18.2.23_re_woyj4nxx2vqabcfadcss33skqa/node_modules/@bitdesign/sparks.navigation.link/dist/link.module.scss";
function Link({ children, className, noStyle, ...rest }) {
  return (0, import_jsx_runtime.jsx)(import_base_react_navigation.Link, { ...rest, className: (0, import_classnames.default)(!noStyle ? styles.link : void 0, className), children });
}

// node_modules/.pnpm/@bitdesign+sparks.navigation.link@0.0.2_@testing-library+react@14.2.2_@types+react@18.2.23_re_woyj4nxx2vqabcfadcss33skqa/node_modules/@bitdesign/sparks.navigation.link/dist/navigation-provider.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_ui_foundation_ui_navigation = __toESM(require_dist3(), 1);
var import_base_react_navigation2 = __toESM(require_dist2(), 1);
function NavigationProvider({ children, adapter = import_ui_foundation_ui_navigation.reactRouterAdapter }) {
  return (0, import_jsx_runtime2.jsx)(import_base_react_navigation2.NavigationProvider, { implementation: adapter, children });
}

// node_modules/.pnpm/@bitdesign+sparks.navigation.link@0.0.2_@testing-library+react@14.2.2_@types+react@18.2.23_re_woyj4nxx2vqabcfadcss33skqa/node_modules/@bitdesign/sparks.navigation.link/dist/index.js
var import_base_react_navigation3 = __toESM(require_dist2());
var import_base_react_navigation4 = __toESM(require_dist2());
var import_base_react_navigation5 = __toESM(require_dist2());

export {
  Link,
  NavigationProvider,
  import_base_react_navigation3 as import_base_react_navigation,
  import_base_react_navigation4 as import_base_react_navigation2,
  import_base_react_navigation5 as import_base_react_navigation3
};
/*! Bundled license information:

classnames/index.js:
  (*!
    Copyright (c) 2018 Jed Watson.
    Licensed under the MIT License (MIT), see
    http://jedwatson.github.io/classnames
  *)
*/
//# sourceMappingURL=chunk-VGITQBF7.js.map
